{
    "patches": [
        {
            "label": "2025-10-28_16-22-08",
            "content": "@@ -1,1399 +0,0 @@\n-class Pessoa:%0A    def __init__(self, nome: str):%0A        self.nome = nome%0A        %0A    def __str__(self):%0A        return self.nome%0A    %0Aclass Budega:%0A    def __init__(self, num_caixas: int):%0A        self.caixas: list%5BPessoa %7C None%5D = %5B%5D%0A        for _ in range(num_caixas):%0A            self.caixas.append(None)%0A        self.espera: list%5BPessoa%5D = %5B%5D%0A        %0A    def enter(self, pessoa: Pessoa):%0A        self.espera.append(pessoa)%0A        %0A    def call(self, index: int):%0A       if index %3C 0 or index %3E=  len(self.caixas):%0A           print(%22caixa inexistente%22)%0A           return%0A       if self.caixas%5Bindex%5D is not None:%0A           print(%22Caixa ocupado%22) %0A           return%0A       if len (self.espera) == 0:%0A           print(%22 niniguem esperando%22)%0A           return%0A       self.caixas%5Bindex%5D = self.espera%5B0%5D%0A       del self.espera%5B0%5D%0A       %0A       %0A    def finish(self, index: int):%0A        self.caixas%5Bindex%5D = None%0A        %0A    def give_up(self, nome:)          %0A           %0A           %0A           %0A    def __str__(self):%0A        caixas = %22, %22.join(%5B%22----%22 if x is None else str(x) for x in self.caixas%5D)%0A        espera = %22, %22.join(%5Bstr(x) for x in self.espera%5D)%0A        return f%22Caixas: %5B%7Bcaixas%7D%5D /nEspera: %5B%7Bespera%7D%5D%22%0A        %0A        %0A        %0A        %0Apessoa = Pessoa (%22Maria%22)%0Aprint(pessoa)%0Abudega = Budega(5)%0Abudega.caixas%5B2%5D = pessoa%0Abudega.espera.append(pessoa)%0Aprint(Budega)%0Abudega.call\n",
            "lines": "0"
        },
        {
            "label": "2025-10-28_20-35-28",
            "content": "class Pessoa:\n    def __init__(self, nome: str):\n        self.nome = nome\n        \n    def __str__(self):\n        return self.nome\n    \nclass Budega:\n    def __init__(self, num_caixas: int):\n        self.caixas: list[Pessoa | None] = []\n        for _ in range(num_caixas):\n            self.caixas.append(None)\n        self.espera: list[Pessoa] = []\n        \n    def enter(self, pessoa: Pessoa):\n        self.espera.append(pessoa)\n        \n    def call(self, index: int):\n       if index < 0 or index >=  len(self.caixas):\n           print(\"caixa inexistente\")\n           return\n       if self.caixas[index] is not None:\n           print(\"Caixa ocupado\") \n           return\n       if len (self.espera) == 0:\n           print(\" niniguem esperando\")\n           return\n       self.caixas[index] = self.espera[0]\n       del self.espera[0]\n       \n       \n    def finish(self, index: int):\n        self.caixas[index] = None\n        \n    def give_up(self, nome:)          \n           \n           \n           \n    def __str__(self):\n        caixas = \", \".join([\"----\" if x is None else str(x) for x in self.caixas])\n        espera = \", \".join([str(x) for x in self.espera])\n        return f\"Caixas: [{caixas}] /nEspera: [{espera}]\"\n        \n        \n        \n        \npessoa = Pessoa (\"Maria\")\nprint(pessoa)\nbudega = Budega(5)\nbudega.caixas[2] = pessoa\nbudega.espera.append(pessoa)\nprint(Budega)\nbudega.call",
            "lines": "53"
        }
    ]
}